{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA;AACA,QAAQ,6BAA6B,EAAE,mBAAO,CAAC,0BAAU;AACzD;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://electron-quick-start/external node-commonjs \"electron\"","webpack://electron-quick-start/webpack/bootstrap","webpack://electron-quick-start/./srv/preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// All of the Node.js APIs are available in the preload process.\r\n// It has the same sandbox as a Chrome extension.\r\n\r\nconst { contextBridge, ipcRenderer } = require('electron')\r\n\r\ncontextBridge.exposeInMainWorld('electronAPI', {\r\n    setTitle: (title) => ipcRenderer.send('set-title', title),\r\n    open: (url) => ipcRenderer.send('shell:open', url),\r\n    notify: () => ipcRenderer.send('data-loaded'),\r\n})\r\n"],"names":[],"sourceRoot":""}